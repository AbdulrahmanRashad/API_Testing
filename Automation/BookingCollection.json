{
	"info": {
		"_postman_id": "b9fa3ff5-96c3-41ff-b231-5c91f503aca1",
		"name": "Booking API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24865442",
		"_collection_link": "https://speeding-eclipse-535966.postman.co/workspace/Booking~352e0281-4390-455c-8006-c94f7a552ba2/collection/24865442-b9fa3ff5-96c3-41ff-b231-5c91f503aca1?action=share&source=collection_link&creator=24865442"
	},
	"item": [
		{
			"name": "E2E Scenario",
			"item": [
				{
					"name": "Get Booking IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status Code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"console.log(pm.response.responseSize)\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 1000\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Body matches string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"booking\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Content-Type is present\", function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jasonData = pm.response.json();\r",
									"pm.environment.set(\"b_id\", jasonData.bookingid);\r",
									"\r",
									"pm.test(\"Verify Status Code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 250\", function () {\r",
									"    pm.expect(pm.response.responseSize).to.be.below(250);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Abdulrahman\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Content-Type is present\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify first name\", function () {\r",
									"    pm.expect(jasonData.booking.firstname).to.equal(pm.environment.get(\"fname\"));\r",
									"});\r",
									"\r",
									"/*var fname = pm.variables.get(\"fname\");\r",
									"var lname = pm.variables.get(\"lname\");\r",
									"var tprice = pm.variables.get(\"tprice\");\r",
									"\r",
									"pm.test(\"Verify first name\", function(){\r",
									"    pm.expect(jasonData.booking.firstname).to.eql(fname);\r",
									"})\r",
									"pm.test(\"Verify last name\", function(){\r",
									"    pm.expect(jasonData.booking.lastname).to.eql(lname);\r",
									"})\r",
									"pm.test(\"Verify total price\", function(){\r",
									"    pm.expect(jasonData.booking.totalprice).to.eql(tprice);\r",
									"})*/\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{fname}}\",\r\n    \"lastname\": \"{{lname}}\",\r\n    \"totalprice\": {{tprice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jasonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Status Code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 250\", function(){\r",
									"    pm.expect(pm.response.responseSize).to.be.below(250);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Body matches string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"Abdulrahman\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Content-Type is present\", function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify first name\", function(){\r",
									"    pm.expect(jasonData.firstname).to.equal(pm.environment.get(\"fname\"));\r",
									"});\r",
									"\r",
									"const expectedJSONschema =\r",
									"{\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"firstname\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"lastname\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"totalprice\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"depositpaid\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"bookingdates\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"checkin\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"checkout\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"checkin\",\r",
									"        \"checkout\"\r",
									"      ]\r",
									"    },\r",
									"    \"additionalneeds\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"firstname\",\r",
									"    \"lastname\",\r",
									"    \"totalprice\",\r",
									"    \"depositpaid\",\r",
									"    \"bookingdates\",\r",
									"    \"additionalneeds\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"Verify JSON Schema\", function(){\r",
									"    pm.response.to.have.jsonSchema(expectedJSONschema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{b_id}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{b_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jasonData = pm.response.json();\r",
									"pm.environment.set(\"token\", jasonData.token);\r",
									"\r",
									"\r",
									"pm.test(\"Verify Status Code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 250\", function(){\r",
									"    pm.expect(pm.response.responseSize).to.be.below(250);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Body matches string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Content-Type is present\", function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jasonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Status Code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 250\", function(){\r",
									"    pm.expect(pm.response.responseSize).to.be.below(250);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Body matches string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"Mohamed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Content-Type is present\", function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify first name\", function(){\r",
									"    pm.expect(jasonData.firstname).to.equal(\"Ali\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Ali\",\r\n    \"lastname\" : \"Mohamed\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{b_id}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{b_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status Code is 201\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 10\", function(){\r",
									"    pm.expect(pm.response.responseSize).to.be.below(10);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token = {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{b_id}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{b_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Scenarios",
			"item": [
				{
					"name": "Get Booking Details Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Verify Status Code is 404\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 200ms\", function(){\r",
									"     pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 10\", function(){\r",
									"     pm.expect(pm.response.responseSize).to.be.below(10);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/100000",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"100000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Booking Invalid Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status Code is 400\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Time is less than 500ms\", function(){\r",
									"     pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Response Size is less than 20\", function(){\r",
									"     pm.expect(pm.response.responseSize).to.be.below(20);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Ali\",\r\n    \"lastname\": \"Ashraf\",\r\n    \"totalprice\": u7r2\",\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}